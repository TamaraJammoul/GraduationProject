{
    "sourceFile": "client-app/src/components/paging/paging.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1626460570544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1626460587245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n   styleUrls: ['./paging.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush\r\n })\r\n export class PagingComponent {\r\n-  @Input() previousPage: string='';\r\n-  @Input() nextPage: string='';\r\n+  @Input() previousPage: string = '';\r\n+  @Input() nextPage: string = '';\r\n   @Output() onNewPageRequested = new EventEmitter<string>();\r\n   @Input()\r\n   pagingActionFn!: (pageUrl: string) => void;\r\n \r\n@@ -20,7 +20,7 @@\n   }\r\n \r\n   doesShowPaging() {\r\n     return (this.nextPage && this.nextPage.length > 0)\r\n-    || (this.previousPage && this.previousPage.length > 0);\r\n+      || (this.previousPage && this.previousPage.length > 0);\r\n   }\r\n }\r\n"
                }
            ],
            "date": 1626460570544,
            "name": "Commit-0",
            "content": "/* eslint-disable @angular-eslint/no-output-on-prefix */\r\nimport { ChangeDetectionStrategy, Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-paging',\r\n  templateUrl: './paging.component.html',\r\n  styleUrls: ['./paging.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PagingComponent {\r\n  @Input() previousPage: string='';\r\n  @Input() nextPage: string='';\r\n  @Output() onNewPageRequested = new EventEmitter<string>();\r\n  @Input()\r\n  pagingActionFn!: (pageUrl: string) => void;\r\n\r\n  goToPage(pageUrl: string): void {\r\n    this.onNewPageRequested.emit(pageUrl);\r\n    //this.pagingActionFn(pageUrl);\r\n  }\r\n\r\n  doesShowPaging() {\r\n    return (this.nextPage && this.nextPage.length > 0)\r\n    || (this.previousPage && this.previousPage.length > 0);\r\n  }\r\n}\r\n"
        }
    ]
}