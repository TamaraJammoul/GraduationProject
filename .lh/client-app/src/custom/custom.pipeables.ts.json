{
    "sourceFile": "client-app/src/custom/custom.pipeables.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1627519374301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1627519374301,
            "name": "Commit-0",
            "content": "import { Action } from '@ngrx/store';\r\nimport { Observable, from, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { coreActions } from '@core/store/core.actions';\r\nimport { errorCodeResponses } from '@core/services/common.settings';\r\n\r\n\r\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\r\nexport function catchHttpError<T>(extraFn?: (err: HttpErrorResponse) => Action): (source: Observable<T>) => Observable<T | any> {\r\n  return source => source.pipe(\r\n    catchError(err => {\r\n      const errorIndex = Number.parseInt(err?.error[400][0], 10);\r\n      if (errorCodeResponses[errorIndex]) {\r\n        const displayNotificationAction = coreActions.displayNotification('core.errors.generalTitle', errorCodeResponses[errorIndex]);\r\n        return extraFn ? from([displayNotificationAction, extraFn(err)]) : of(displayNotificationAction);\r\n      } else {\r\n        return extraFn ? from([coreActions.displayHttpError(err), extraFn(err)]) : of(coreActions.displayHttpError(err));\r\n      }\r\n    })\r\n  );\r\n}\r\n\r\n"
        }
    ]
}