{
    "sourceFile": "client-app/src/store/app.effect.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1626537131377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1626540288580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n import { AuthService } from '../services/auth.service';\r\n import { AppActions } from './app.action';\r\n import { BugsService } from '../services/bugs.service';\r\n import { ErrorsService } from '../services/errors.service';\r\n-import { catchHttpError } from '../libs/custom.pipeables';\r\n \r\n @Injectable()\r\n export class AppEffects {\r\n \r\n@@ -23,9 +22,8 @@\n             ofType(AppActions.fetchBugs),\r\n             switchMap(() =>\r\n                 this.bugsService.fetchBugs().pipe(\r\n                     map((results) => AppActions.fetchBugsSuccess(results)),\r\n-                    catchHttpError()\r\n                 )\r\n             )\r\n         )\r\n     );\r\n@@ -35,9 +33,8 @@\n             ofType(AppActions.fetchErrors),\r\n             switchMap(() =>\r\n                 this.errorsService.fetchErrors().pipe(\r\n                     map((results) => AppActions.fetchErrorsSuccess(results)),\r\n-                    catchHttpError()\r\n                 )\r\n             )\r\n         )\r\n     );\r\n@@ -47,9 +44,8 @@\n             ofType(AppActions.deleteError),\r\n             switchMap(([action]) =>\r\n             this.errorsService.deleteError(action.errorId).pipe(\r\n                     map(() => AppActions.deleteErrorSuccess()),\r\n-                    catchHttpError()\r\n                 )\r\n             )\r\n         )\r\n     );\r\n"
                },
                {
                    "date": 1626544912858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n \r\n     deleteErrors$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.deleteError),\r\n-            switchMap(([action]) =>\r\n+            switchMap(action =>\r\n             this.errorsService.deleteError(action.errorId).pipe(\r\n                     map(() => AppActions.deleteErrorSuccess()),\r\n                 )\r\n             )\r\n"
                },
                {
                    "date": 1626545122801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,14 @@\n import {\r\n     map,\r\n     switchMap,\r\n } from 'rxjs/operators';\r\n-import { Store } from '@ngrx/store';\r\n import { AuthService } from '../services/auth.service';\r\n import { AppActions } from './app.action';\r\n import { BugsService } from '../services/bugs.service';\r\n import { ErrorsService } from '../services/errors.service';\r\n \r\n+\r\n @Injectable()\r\n export class AppEffects {\r\n \r\n     fetchBugs$ = createEffect(() =>\r\n@@ -49,11 +49,31 @@\n             )\r\n         )\r\n     );\r\n \r\n+    login$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.login),\r\n+            switchMap(action =>\r\n+            this.authService.login(action.data).pipe(\r\n+                    map(() => AppActions.loginSuccess()),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+\r\n+    signup$ = createEffect(() =>\r\n+    this.actions$.pipe(\r\n+        ofType(AppActions.signUp),\r\n+        switchMap(action =>\r\n+        this.authService.signUp(action.data).pipe(\r\n+                map(() => AppActions.signUpSuccess()),\r\n+            )\r\n+        )\r\n+    )\r\n+);\r\n     constructor(\r\n         private actions$: Actions,\r\n-        private store$: Store,\r\n         private authService: AuthService,\r\n         private bugsService: BugsService,\r\n         private errorsService: ErrorsService\r\n     ) { }\r\n"
                }
            ],
            "date": 1626537131377,
            "name": "Commit-0",
            "content": "import { Injectable } from '@angular/core';\r\nimport {\r\n    Actions,\r\n    createEffect,\r\n    ofType\r\n} from '@ngrx/effects';\r\nimport {\r\n    map,\r\n    switchMap,\r\n} from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { AppActions } from './app.action';\r\nimport { BugsService } from '../services/bugs.service';\r\nimport { ErrorsService } from '../services/errors.service';\r\nimport { catchHttpError } from '../libs/custom.pipeables';\r\n\r\n@Injectable()\r\nexport class AppEffects {\r\n\r\n    fetchBugs$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AppActions.fetchBugs),\r\n            switchMap(() =>\r\n                this.bugsService.fetchBugs().pipe(\r\n                    map((results) => AppActions.fetchBugsSuccess(results)),\r\n                    catchHttpError()\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    fetchErrors$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AppActions.fetchErrors),\r\n            switchMap(() =>\r\n                this.errorsService.fetchErrors().pipe(\r\n                    map((results) => AppActions.fetchErrorsSuccess(results)),\r\n                    catchHttpError()\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    deleteErrors$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AppActions.deleteError),\r\n            switchMap(([action]) =>\r\n            this.errorsService.deleteError(action.errorId).pipe(\r\n                    map(() => AppActions.deleteErrorSuccess()),\r\n                    catchHttpError()\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store$: Store,\r\n        private authService: AuthService,\r\n        private bugsService: BugsService,\r\n        private errorsService: ErrorsService\r\n    ) { }\r\n}"
        }
    ]
}