{
    "sourceFile": "client-app/src/store/app.effect.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1626537131377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1626540288580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n import { AuthService } from '../services/auth.service';\r\n import { AppActions } from './app.action';\r\n import { BugsService } from '../services/bugs.service';\r\n import { ErrorsService } from '../services/errors.service';\r\n-import { catchHttpError } from '../libs/custom.pipeables';\r\n \r\n @Injectable()\r\n export class AppEffects {\r\n \r\n@@ -23,9 +22,8 @@\n             ofType(AppActions.fetchBugs),\r\n             switchMap(() =>\r\n                 this.bugsService.fetchBugs().pipe(\r\n                     map((results) => AppActions.fetchBugsSuccess(results)),\r\n-                    catchHttpError()\r\n                 )\r\n             )\r\n         )\r\n     );\r\n@@ -35,9 +33,8 @@\n             ofType(AppActions.fetchErrors),\r\n             switchMap(() =>\r\n                 this.errorsService.fetchErrors().pipe(\r\n                     map((results) => AppActions.fetchErrorsSuccess(results)),\r\n-                    catchHttpError()\r\n                 )\r\n             )\r\n         )\r\n     );\r\n@@ -47,9 +44,8 @@\n             ofType(AppActions.deleteError),\r\n             switchMap(([action]) =>\r\n             this.errorsService.deleteError(action.errorId).pipe(\r\n                     map(() => AppActions.deleteErrorSuccess()),\r\n-                    catchHttpError()\r\n                 )\r\n             )\r\n         )\r\n     );\r\n"
                },
                {
                    "date": 1626544912858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n \r\n     deleteErrors$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.deleteError),\r\n-            switchMap(([action]) =>\r\n+            switchMap(action =>\r\n             this.errorsService.deleteError(action.errorId).pipe(\r\n                     map(() => AppActions.deleteErrorSuccess()),\r\n                 )\r\n             )\r\n"
                },
                {
                    "date": 1626545122801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,14 @@\n import {\r\n     map,\r\n     switchMap,\r\n } from 'rxjs/operators';\r\n-import { Store } from '@ngrx/store';\r\n import { AuthService } from '../services/auth.service';\r\n import { AppActions } from './app.action';\r\n import { BugsService } from '../services/bugs.service';\r\n import { ErrorsService } from '../services/errors.service';\r\n \r\n+\r\n @Injectable()\r\n export class AppEffects {\r\n \r\n     fetchBugs$ = createEffect(() =>\r\n@@ -49,11 +49,31 @@\n             )\r\n         )\r\n     );\r\n \r\n+    login$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.login),\r\n+            switchMap(action =>\r\n+            this.authService.login(action.data).pipe(\r\n+                    map(() => AppActions.loginSuccess()),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+\r\n+    signup$ = createEffect(() =>\r\n+    this.actions$.pipe(\r\n+        ofType(AppActions.signUp),\r\n+        switchMap(action =>\r\n+        this.authService.signUp(action.data).pipe(\r\n+                map(() => AppActions.signUpSuccess()),\r\n+            )\r\n+        )\r\n+    )\r\n+);\r\n     constructor(\r\n         private actions$: Actions,\r\n-        private store$: Store,\r\n         private authService: AuthService,\r\n         private bugsService: BugsService,\r\n         private errorsService: ErrorsService\r\n     ) { }\r\n"
                },
                {
                    "date": 1626810316369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import { AuthService } from '../services/auth.service';\r\n import { AppActions } from './app.action';\r\n import { BugsService } from '../services/bugs.service';\r\n import { ErrorsService } from '../services/errors.service';\r\n+import { ProjectService } from '../services/project.service';\r\n \r\n \r\n @Injectable()\r\n export class AppEffects {\r\n@@ -42,9 +43,9 @@\n     deleteErrors$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.deleteError),\r\n             switchMap(action =>\r\n-            this.errorsService.deleteError(action.errorId).pipe(\r\n+                this.errorsService.deleteError(action.errorId).pipe(\r\n                     map(() => AppActions.deleteErrorSuccess()),\r\n                 )\r\n             )\r\n         )\r\n@@ -53,28 +54,74 @@\n     login$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.login),\r\n             switchMap(action =>\r\n-            this.authService.login(action.data).pipe(\r\n+                this.authService.login(action.data).pipe(\r\n                     map(() => AppActions.loginSuccess()),\r\n                 )\r\n             )\r\n         )\r\n     );\r\n \r\n     signup$ = createEffect(() =>\r\n-    this.actions$.pipe(\r\n-        ofType(AppActions.signUp),\r\n-        switchMap(action =>\r\n-        this.authService.signUp(action.data).pipe(\r\n-                map(() => AppActions.signUpSuccess()),\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.signUp),\r\n+            switchMap(action =>\r\n+                this.authService.signUp(action.data).pipe(\r\n+                    map(() => AppActions.signUpSuccess()),\r\n+                )\r\n             )\r\n         )\r\n-    )\r\n-);\r\n+    );\r\n+\r\n+    addProject$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.addProject),\r\n+            switchMap(action =>\r\n+                this.projectService.addProject(action.name).pipe(\r\n+                    map((res) => AppActions.addProjectSuccess(res)),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+\r\n+    deleteProject$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.deleteProject),\r\n+            switchMap(action =>\r\n+                this.projectService.deleteProject(action.projectId).pipe(\r\n+                    map(() => AppActions.deleteProjectSuccess()),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+\r\n+    deleteProjectMember$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.deleteProjectTeamMember),\r\n+            switchMap(action =>\r\n+                this.projectService.deleteProjectMember(action.email).pipe(\r\n+                    map(() => AppActions.deleteProjectTeamMemberSuccess()),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+\r\n+    addProjectMember$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.addProjectTeamMember),\r\n+            switchMap(action =>\r\n+                this.projectService.addProjectMember(action.email).pipe(\r\n+                    map(() => AppActions.addProjectTeamMemberSuccess()),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+    \r\n     constructor(\r\n         private actions$: Actions,\r\n         private authService: AuthService,\r\n         private bugsService: BugsService,\r\n-        private errorsService: ErrorsService\r\n+        private errorsService: ErrorsService,\r\n+        private projectService: ProjectService\r\n     ) { }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1626810482257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n import { AppActions } from './app.action';\r\n import { BugsService } from '../services/bugs.service';\r\n import { ErrorsService } from '../services/errors.service';\r\n import { ProjectService } from '../services/project.service';\r\n+import { TeamService } from '../services/team.service';\r\n \r\n \r\n @Injectable()\r\n export class AppEffects {\r\n@@ -115,13 +116,36 @@\n                 )\r\n             )\r\n         )\r\n     );\r\n-    \r\n+\r\n+    addTeamMember$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.addTeamMember),\r\n+            switchMap(action =>\r\n+                this.teamService.addTeamMember(action.email).pipe(\r\n+                    map(() => AppActions.addTeamMemberSuccess()),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+\r\n+    deleteTeamMember$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.deleteTeamMember),\r\n+            switchMap(action =>\r\n+                this.teamService.deleteTeamMember(action.email).pipe(\r\n+                    map(() => AppActions.deleteTeamMemberSuccess()),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+\r\n     constructor(\r\n         private actions$: Actions,\r\n         private authService: AuthService,\r\n         private bugsService: BugsService,\r\n         private errorsService: ErrorsService,\r\n-        private projectService: ProjectService\r\n+        private projectService: ProjectService,\r\n+        private teamService: TeamService\r\n     ) { }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1626810897145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,8 +95,19 @@\n             )\r\n         )\r\n     );\r\n \r\n+    renameProjectMember$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.renameProject),\r\n+            switchMap(action =>\r\n+                this.projectService.renameProjectMember(action.projectId, action.projectName).pipe(\r\n+                    map(() => AppActions.renameProjectSuccess(action.projectId, action.projectName)),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+\r\n     deleteProjectMember$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.deleteProjectTeamMember),\r\n             switchMap(action =>\r\n"
                },
                {
                    "date": 1627114352692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,8 +106,19 @@\n             )\r\n         )\r\n     );\r\n \r\n+    getProjects$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.getProject),\r\n+            switchMap(() =>\r\n+                this.projectService.getProjects().pipe(\r\n+                    map((res) => AppActions.getProjectSuccess(res)),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+\r\n     deleteProjectMember$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.deleteProjectTeamMember),\r\n             switchMap(action =>\r\n"
                },
                {
                    "date": 1627163074904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,9 +144,9 @@\n         this.actions$.pipe(\r\n             ofType(AppActions.addTeamMember),\r\n             switchMap(action =>\r\n                 this.teamService.addTeamMember(action.email).pipe(\r\n-                    map(() => AppActions.addTeamMemberSuccess()),\r\n+                    map((res) => AppActions.addTeamMemberSuccess(res)),\r\n                 )\r\n             )\r\n         )\r\n     );\r\n@@ -154,9 +154,9 @@\n     deleteTeamMember$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.deleteTeamMember),\r\n             switchMap(action =>\r\n-                this.teamService.deleteTeamMember(action.email).pipe(\r\n+                this.teamService.deleteTeamMember(action.id).pipe(\r\n                     map(() => AppActions.deleteTeamMemberSuccess()),\r\n                 )\r\n             )\r\n         )\r\n"
                },
                {
                    "date": 1627163462002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n     deleteProjectMember$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.deleteProjectTeamMember),\r\n             switchMap(action =>\r\n-                this.projectService.deleteProjectMember(action.email).pipe(\r\n+                this.projectService.deleteProjectMember(action.userId, action.projectId).pipe(\r\n                     map(() => AppActions.deleteProjectTeamMemberSuccess()),\r\n                 )\r\n             )\r\n         )\r\n"
                },
                {
                    "date": 1627163812906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,10 +132,10 @@\n     addProjectMember$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.addProjectTeamMember),\r\n             switchMap(action =>\r\n-                this.projectService.addProjectMember(action.email).pipe(\r\n-                    map(() => AppActions.addProjectTeamMemberSuccess()),\r\n+                this.projectService.addProjectMember(action.id, action.projectId).pipe(\r\n+                    map((res) => AppActions.addProjectTeamMemberSuccess(res, action.projectId)),\r\n                 )\r\n             )\r\n         )\r\n     );\r\n"
                },
                {
                    "date": 1627164889679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n     deleteProjectMember$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.deleteProjectTeamMember),\r\n             switchMap(action =>\r\n-                this.projectService.deleteProjectMember(action.userId, action.projectId).pipe(\r\n+                this.projectService.deleteProjectMember(action.id, action.projectId).pipe(\r\n                     map(() => AppActions.deleteProjectTeamMemberSuccess()),\r\n                 )\r\n             )\r\n         )\r\n"
                },
                {
                    "date": 1627508420031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,16 +5,17 @@\n     ofType\r\n } from '@ngrx/effects';\r\n import {\r\n     map,\r\n-    switchMap,\r\n+    switchMap, catchError, exhaustMap,\r\n } from 'rxjs/operators';\r\n import { AuthService } from '../services/auth.service';\r\n import { AppActions } from './app.action';\r\n import { BugsService } from '../services/bugs.service';\r\n import { ErrorsService } from '../services/errors.service';\r\n import { ProjectService } from '../services/project.service';\r\n import { TeamService } from '../services/team.service';\r\n+import { of } from 'rxjs';\r\n \r\n \r\n @Injectable()\r\n export class AppEffects {\r\n@@ -98,11 +99,12 @@\n \r\n     renameProjectMember$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.renameProject),\r\n-            switchMap(action =>\r\n+            exhaustMap(action =>\r\n                 this.projectService.renameProjectMember(action.projectId, action.projectName).pipe(\r\n                     map(() => AppActions.renameProjectSuccess(action.projectId, action.projectName)),\r\n+                    catchError(() => of(AppActions.renameProject(action.projectId, action.projectName)))\r\n                 )\r\n             )\r\n         )\r\n     );\r\n@@ -128,8 +130,9 @@\n             )\r\n         )\r\n     );\r\n \r\n+\r\n     addProjectMember$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.addProjectTeamMember),\r\n             switchMap(action =>\r\n"
                },
                {
                    "date": 1627508499861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,16 @@\n     ofType\r\n } from '@ngrx/effects';\r\n import {\r\n     map,\r\n-    switchMap, catchError, exhaustMap,\r\n+    switchMap,\r\n } from 'rxjs/operators';\r\n import { AuthService } from '../services/auth.service';\r\n import { AppActions } from './app.action';\r\n import { BugsService } from '../services/bugs.service';\r\n import { ErrorsService } from '../services/errors.service';\r\n import { ProjectService } from '../services/project.service';\r\n import { TeamService } from '../services/team.service';\r\n-import { of } from 'rxjs';\r\n \r\n \r\n @Injectable()\r\n export class AppEffects {\r\n@@ -99,12 +98,11 @@\n \r\n     renameProjectMember$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.renameProject),\r\n-            exhaustMap(action =>\r\n+            switchMap(action =>\r\n                 this.projectService.renameProjectMember(action.projectId, action.projectName).pipe(\r\n                     map(() => AppActions.renameProjectSuccess(action.projectId, action.projectName)),\r\n-                    catchError(() => of(AppActions.renameProject(action.projectId, action.projectName)))\r\n                 )\r\n             )\r\n         )\r\n     );\r\n"
                },
                {
                    "date": 1627513570906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,19 @@\n             )\r\n         )\r\n     );\r\n \r\n+    getProjectUsers$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.fetchProjectUsers),\r\n+            switchMap(action =>\r\n+                this.projectService.getProjectUsers(action.projectId).pipe(\r\n+                    map((res) => AppActions.fetchProjectUsersSuccess(res)),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+\r\n     deleteProject$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.deleteProject),\r\n             switchMap(action =>\r\n"
                },
                {
                    "date": 1627608843858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,11 @@\n     ofType\r\n } from '@ngrx/effects';\r\n import {\r\n     map,\r\n-    switchMap,\r\n+    switchMap,catchError \r\n } from 'rxjs/operators';\r\n+import { EMPTY } from 'rxjs';\r\n import { AuthService } from '../services/auth.service';\r\n import { AppActions } from './app.action';\r\n import { BugsService } from '../services/bugs.service';\r\n import { ErrorsService } from '../services/errors.service';\r\n@@ -112,8 +113,9 @@\n             ofType(AppActions.renameProject),\r\n             switchMap(action =>\r\n                 this.projectService.renameProjectMember(action.projectId, action.projectName).pipe(\r\n                     map(() => AppActions.renameProjectSuccess(action.projectId, action.projectName)),\r\n+                    catchError(() => EMPTY)\r\n                 )\r\n             )\r\n         )\r\n     );\r\n"
                },
                {
                    "date": 1628098138305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,10 +146,10 @@\n     addProjectMember$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.addProjectTeamMember),\r\n             switchMap(action =>\r\n-                this.projectService.addProjectMember(action.id, action.projectId).pipe(\r\n-                    map((res) => AppActions.addProjectTeamMemberSuccess(res, action.projectId)),\r\n+                this.projectService.addProjectMember(action.id.id, action.projectId).pipe(\r\n+                    map(() => AppActions.addProjectTeamMemberSuccess(action.id, action.projectId)),\r\n                 )\r\n             )\r\n         )\r\n     );\r\n"
                },
                {
                    "date": 1628098241285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,10 +146,10 @@\n     addProjectMember$ = createEffect(() =>\r\n         this.actions$.pipe(\r\n             ofType(AppActions.addProjectTeamMember),\r\n             switchMap(action =>\r\n-                this.projectService.addProjectMember(action.id.id, action.projectId).pipe(\r\n-                    map(() => AppActions.addProjectTeamMemberSuccess(action.id, action.projectId)),\r\n+                this.projectService.addProjectMember(action.user.id, action.projectId).pipe(\r\n+                    map(() => AppActions.addProjectTeamMemberSuccess(action.user, action.projectId)),\r\n                 )\r\n             )\r\n         )\r\n     );\r\n"
                },
                {
                    "date": 1628100714208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n         this.actions$.pipe(\r\n             ofType(AppActions.deleteTeamMember),\r\n             switchMap(action =>\r\n                 this.teamService.deleteTeamMember(action.id).pipe(\r\n-                    map(() => AppActions.deleteTeamMemberSuccess()),\r\n+                    map(() => AppActions.deleteTeamMemberSuccess(action.id)),\r\n                 )\r\n             )\r\n         )\r\n     );\r\n"
                },
                {
                    "date": 1628101001470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n     ofType\r\n } from '@ngrx/effects';\r\n import {\r\n     map,\r\n-    switchMap,catchError \r\n+    switchMap, catchError\r\n } from 'rxjs/operators';\r\n import { EMPTY } from 'rxjs';\r\n import { AuthService } from '../services/auth.service';\r\n import { AppActions } from './app.action';\r\n@@ -175,8 +175,19 @@\n             )\r\n         )\r\n     );\r\n \r\n+    getTeamMember$ = createEffect(() =>\r\n+        this.actions$.pipe(\r\n+            ofType(AppActions.getTeamMembers),\r\n+            switchMap(() =>\r\n+                this.teamService.getTeamMembers().pipe(\r\n+                    map((res) => AppActions.getTeamMembersSuccess(res)),\r\n+                )\r\n+            )\r\n+        )\r\n+    );\r\n+\r\n     constructor(\r\n         private actions$: Actions,\r\n         private authService: AuthService,\r\n         private bugsService: BugsService,\r\n"
                }
            ],
            "date": 1626537131377,
            "name": "Commit-0",
            "content": "import { Injectable } from '@angular/core';\r\nimport {\r\n    Actions,\r\n    createEffect,\r\n    ofType\r\n} from '@ngrx/effects';\r\nimport {\r\n    map,\r\n    switchMap,\r\n} from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { AppActions } from './app.action';\r\nimport { BugsService } from '../services/bugs.service';\r\nimport { ErrorsService } from '../services/errors.service';\r\nimport { catchHttpError } from '../libs/custom.pipeables';\r\n\r\n@Injectable()\r\nexport class AppEffects {\r\n\r\n    fetchBugs$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AppActions.fetchBugs),\r\n            switchMap(() =>\r\n                this.bugsService.fetchBugs().pipe(\r\n                    map((results) => AppActions.fetchBugsSuccess(results)),\r\n                    catchHttpError()\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    fetchErrors$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AppActions.fetchErrors),\r\n            switchMap(() =>\r\n                this.errorsService.fetchErrors().pipe(\r\n                    map((results) => AppActions.fetchErrorsSuccess(results)),\r\n                    catchHttpError()\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    deleteErrors$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AppActions.deleteError),\r\n            switchMap(([action]) =>\r\n            this.errorsService.deleteError(action.errorId).pipe(\r\n                    map(() => AppActions.deleteErrorSuccess()),\r\n                    catchHttpError()\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store$: Store,\r\n        private authService: AuthService,\r\n        private bugsService: BugsService,\r\n        private errorsService: ErrorsService\r\n    ) { }\r\n}"
        }
    ]
}