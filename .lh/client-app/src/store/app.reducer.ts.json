{
    "sourceFile": "client-app/src/store/app.reducer.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 36,
            "patches": [
                {
                    "date": 1626516152362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1626616690094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,18 @@\n   [] as Error[],\r\n   on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n );\r\n \r\n+export const MembersReducer = createReducer(\r\n+  [] as string[],\r\n+  on(AppActions.addTeamMember, (state, { email }) => {\r\n+    const newState: string[] = [...state];\r\n+    newState.push(email);\r\n+    return newState;\r\n+  })\r\n+);\r\n+\r\n export const reducers: ActionReducerMap<AppState> = {\r\n   bugs: bugsReducer,\r\n-  errors: errorsReducer\r\n+  errors: errorsReducer,\r\n+  members: MembersReducer\r\n }\r\n"
                },
                {
                    "date": 1626616751591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,10 @@\n   on(AppActions.addTeamMember, (state, { email }) => {\r\n     const newState: string[] = [...state];\r\n     newState.push(email);\r\n     return newState;\r\n-  })\r\n+  }),\r\n+  on(AppActions.deleteTeamMember, (state, { email }) => state.filter(e => e !== email))\r\n );\r\n \r\n export const reducers: ActionReducerMap<AppState> = {\r\n   bugs: bugsReducer,\r\n"
                },
                {
                    "date": 1626617204695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,15 +2,16 @@\n import { AppActions } from './app.action';\r\n import { AppState } from './app.state';\r\n import { Error } from '../models/error.model';\r\n import { Bug } from '../models/bug.model';\r\n+import { Project } from '../models/project.model';\r\n \r\n-export const bugsReducer = createReducer(\r\n+export const BugsReducer = createReducer(\r\n   [] as Bug[],\r\n   on(AppActions.fetchBugsSuccess, (_, { bugs }) => bugs)\r\n );\r\n \r\n-export const errorsReducer = createReducer(\r\n+export const ErrorsReducer = createReducer(\r\n   [] as Error[],\r\n   on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n );\r\n \r\n@@ -23,9 +24,20 @@\n   }),\r\n   on(AppActions.deleteTeamMember, (state, { email }) => state.filter(e => e !== email))\r\n );\r\n \r\n+export const ProjectReducer = createReducer(\r\n+  [] as Project[],\r\n+  on(AppActions.addProjectSuccess, (state, { project }) => {\r\n+    const newState: Project[] = [...state];\r\n+    newState.push(project);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId))\r\n+);\r\n+\r\n export const reducers: ActionReducerMap<AppState> = {\r\n-  bugs: bugsReducer,\r\n-  errors: errorsReducer,\r\n-  members: MembersReducer\r\n+  bugs: BugsReducer,\r\n+  errors: ErrorsReducer,\r\n+  members: MembersReducer,\r\n+  projects: ProjectReducer\r\n }\r\n"
                },
                {
                    "date": 1626617546397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,10 @@\n     const newState: Project[] = [...state];\r\n     newState.push(project);\r\n     return newState;\r\n   }),\r\n-  on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId))\r\n+  on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId)),\r\n+  on(AppActions.getProjectSuccess, (_, { projects }) => projects)\r\n );\r\n \r\n export const reducers: ActionReducerMap<AppState> = {\r\n   bugs: BugsReducer,\r\n"
                },
                {
                    "date": 1626811060880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,20 @@\n     newState.push(project);\r\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId)),\r\n-  on(AppActions.getProjectSuccess, (_, { projects }) => projects)\r\n+  on(AppActions.getProjectSuccess, (_, { projects }) => projects),\r\n+  on(AppActions.renameProjectSuccess, (state, { projectId, projectName }) => {\r\n+    let newState = [...state];\r\n+    const id: number = newState.findIndex(e => {\r\n+      if (e.id === projectId) {\r\n+        return true;\r\n+      }\r\n+      return false;\r\n+      );\r\n+    newState[id].name = projectName;\r\n+    return newState;\r\n+  }),\r\n );\r\n \r\n export const reducers: ActionReducerMap<AppState> = {\r\n   bugs: BugsReducer,\r\n"
                },
                {
                    "date": 1626811126924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,14 +35,9 @@\n   on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId)),\r\n   on(AppActions.getProjectSuccess, (_, { projects }) => projects),\r\n   on(AppActions.renameProjectSuccess, (state, { projectId, projectName }) => {\r\n     let newState = [...state];\r\n-    const id: number = newState.findIndex(e => {\r\n-      if (e.id === projectId) {\r\n-        return true;\r\n-      }\r\n-      return false;\r\n-      );\r\n+    const id: number = newState.findIndex(e => e.id === projectId);\r\n     newState[id].name = projectName;\r\n     return newState;\r\n   }),\r\n );\r\n"
                },
                {
                    "date": 1627162992558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { AppState } from './app.state';\r\n import { Error } from '../models/error.model';\r\n import { Bug } from '../models/bug.model';\r\n import { Project } from '../models/project.model';\r\n+import { User } from '../models/user.model';\r\n \r\n export const BugsReducer = createReducer(\r\n   [] as Bug[],\r\n   on(AppActions.fetchBugsSuccess, (_, { bugs }) => bugs)\r\n@@ -15,15 +16,16 @@\n   on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n );\r\n \r\n export const MembersReducer = createReducer(\r\n-  [] as string[],\r\n-  on(AppActions.addTeamMember, (state, { email }) => {\r\n-    const newState: string[] = [...state];\r\n-    newState.push(email);\r\n+  [] as User[],\r\n+  on(AppActions.addTeamMemberSuccess, (state, {user}) => {\r\n+    const newState: User[] = [...state];\r\n+    newState.push(user);\r\n     return newState;\r\n   }),\r\n-  on(AppActions.deleteTeamMember, (state, { email }) => state.filter(e => e !== email))\r\n+  on(AppActions.deleteTeamMember, (state, {id  }) => state.filter(e => e.id !== id)),\r\n+  on(AppActions.getTeamMembersSuccess, (_,{users}) => users)\r\n );\r\n \r\n export const ProjectReducer = createReducer(\r\n   [] as Project[],\r\n"
                },
                {
                    "date": 1627164187691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,15 +17,15 @@\n );\r\n \r\n export const MembersReducer = createReducer(\r\n   [] as User[],\r\n-  on(AppActions.addTeamMemberSuccess, (state, {user}) => {\r\n+  on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n     const newState: User[] = [...state];\r\n     newState.push(user);\r\n     return newState;\r\n   }),\r\n-  on(AppActions.deleteTeamMember, (state, {id  }) => state.filter(e => e.id !== id)),\r\n-  on(AppActions.getTeamMembersSuccess, (_,{users}) => users)\r\n+  on(AppActions.deleteTeamMember, (state, { id }) => state.filter(e => e.id !== id)),\r\n+  on(AppActions.getTeamMembersSuccess, (_, { users }) => users)\r\n );\r\n \r\n export const ProjectReducer = createReducer(\r\n   [] as Project[],\r\n@@ -41,8 +41,21 @@\n     const id: number = newState.findIndex(e => e.id === projectId);\r\n     newState[id].name = projectName;\r\n     return newState;\r\n   }),\r\n+  on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n+    const newState: Project[] = [...state];\r\n+    const project: number = newState.findIndex(e => e.id === projectId);\r\n+    newState[project].users.push(user);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteTeamMember, (state, { id, projectId }) => {\r\n+    let newState: Project[] = [...state];\r\n+    const project: number = newState.findIndex(e => e.id === projectId);\r\n+    const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n+    newState[project].users = newState[project].users.slice(userId, 1);\r\n+    return newState;\r\n+  }),\r\n );\r\n \r\n export const reducers: ActionReducerMap<AppState> = {\r\n   bugs: BugsReducer,\r\n"
                },
                {
                    "date": 1627164216330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n   on(AppActions.deleteTeamMember, (state, { id, projectId }) => {\r\n     let newState: Project[] = [...state];\r\n     const project: number = newState.findIndex(e => e.id === projectId);\r\n     const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n-    newState[project].users = newState[project].users.slice(userId, 1);\r\n+    newState[project] = { ...newState[project], users: newState[project].users.slice(userId, 1); }\r\n     return newState;\r\n   }),\r\n );\r\n \r\n"
                },
                {
                    "date": 1627164224918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n   on(AppActions.deleteTeamMember, (state, { id, projectId }) => {\r\n     let newState: Project[] = [...state];\r\n     const project: number = newState.findIndex(e => e.id === projectId);\r\n     const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n-    newState[project] = { ...newState[project], users: newState[project].users.slice(userId, 1); }\r\n+    newState[project] = { ...newState[project], users: newState[project].users.slice(userId, 1)}\r\n     return newState;\r\n   }),\r\n );\r\n \r\n"
                },
                {
                    "date": 1627164868786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     const project: number = newState.findIndex(e => e.id === projectId);\r\n     newState[project].users.push(user);\r\n     return newState;\r\n   }),\r\n-  on(AppActions.deleteTeamMember, (state, { id, projectId }) => {\r\n+  on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     let newState: Project[] = [...state];\r\n     const project: number = newState.findIndex(e => e.id === projectId);\r\n     const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n     newState[project] = { ...newState[project], users: newState[project].users.slice(userId, 1)}\r\n"
                },
                {
                    "date": 1627505068385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,15 +51,16 @@\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     let newState: Project[] = [...state];\r\n     const project: number = newState.findIndex(e => e.id === projectId);\r\n     const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n-    newState[project] = { ...newState[project], users: newState[project].users.slice(userId, 1)}\r\n+    newState[project] = { ...newState[project], users: newState[project].users.splice(userId, 1)}\r\n     return newState;\r\n   }),\r\n );\r\n \r\n+\r\n export const reducers: ActionReducerMap<AppState> = {\r\n   bugs: BugsReducer,\r\n   errors: ErrorsReducer,\r\n   members: MembersReducer,\r\n-  projects: ProjectReducer\r\n+  projects: ProjectReducer,\r\n }\r\n"
                },
                {
                    "date": 1627505254155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import { createReducer, ActionReducerMap, on } from '@ngrx/store';\r\n+import { AppActions } from './app.action';\r\n+import { AppState } from './app.state';\r\n+import { Error } from '../models/error.model';\r\n+import { Bug } from '../models/bug.model';\r\n+import { Project } from '../models/project.model';\r\n+import { User } from '../models/user.model';\r\n+\r\n+export const BugsReducer = createReducer(\r\n+  [] as Bug[],\r\n+  on(AppActions.fetchBugsSuccess, (_, { bugs }) => bugs)\r\n+);\r\n+\r\n+export const ErrorsReducer = createReducer(\r\n+  [] as Error[],\r\n+  on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n+);\r\n+\r\n+export const MembersReducer = createReducer(\r\n+  [] as User[],\r\n+  on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n+    const newState: User[] = [...state];\r\n+    newState.push(user);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteTeamMember, (state, { id }) => state.filter(e => e.id !== id)),\r\n+  on(AppActions.getTeamMembersSuccess, (_, { users }) => users)\r\n+);\r\n+\r\n+export const ProjectReducer = createReducer(\r\n+  [] as Project[],\r\n+  on(AppActions.addProjectSuccess, (state, { project }) => {\r\n+    const newState: Project[] = [...state];\r\n+    newState.push(project);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId)),\r\n+  on(AppActions.getProjectSuccess, (_, { projects }) => projects),\r\n+  on(AppActions.renameProjectSuccess, (state, { projectId, projectName }) => {\r\n+    let newState = [...state];\r\n+    const id: number = newState.findIndex(e => e.id === projectId);\r\n+    newState[id].name = projectName;\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n+    const newState: Project[] = [...state];\r\n+    const project: number = newState.findIndex(e => e.id === projectId);\r\n+    newState[project].users.push(user);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n+    let newState: Project[] = [...state];\r\n+    const project: number = newState.findIndex(e => e.id === projectId);\r\n+    const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n+    newState[project].users.splice(userId, 1);\r\n+    return newState;\r\n+  }),\r\n+);\r\n+\r\n+\r\n+export const reducers: ActionReducerMap<AppState> = {\r\n+  bugs: BugsReducer,\r\n+  errors: ErrorsReducer,\r\n+  members: MembersReducer,\r\n+  projects: ProjectReducer,\r\n+}\r\n"
                },
                {
                    "date": 1627505361835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+import { createReducer, ActionReducerMap, on } from '@ngrx/store';\r\n+import { AppActions } from './app.action';\r\n+import { AppState } from './app.state';\r\n+import { Error } from '../models/error.model';\r\n+import { Bug } from '../models/bug.model';\r\n+import { Project } from '../models/project.model';\r\n+import { User } from '../models/user.model';\r\n+\r\n+export const BugsReducer = createReducer(\r\n+  [] as Bug[],\r\n+  on(AppActions.fetchBugsSuccess, (_, { bugs }) => bugs)\r\n+);\r\n+\r\n+export const ErrorsReducer = createReducer(\r\n+  [] as Error[],\r\n+  on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n+);\r\n+\r\n+export const MembersReducer = createReducer(\r\n+  [] as User[],\r\n+  on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n+    const newState: User[] = [...state];\r\n+    newState.push(user);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteTeamMember, (state, { id }) => state.filter(e => e.id !== id)),\r\n+  on(AppActions.getTeamMembersSuccess, (_, { users }) => users)\r\n+);\r\n+\r\n+export const ProjectReducer = createReducer(\r\n+  [] as Project[],\r\n+  on(AppActions.addProjectSuccess, (state, { project }) => {\r\n+    const newState: Project[] = [...state];\r\n+    newState.push(project);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId)),\r\n+  on(AppActions.getProjectSuccess, (_, { projects }) => projects),\r\n+  on(AppActions.renameProjectSuccess, (state, { projectId, projectName }) => {\r\n+    let newState = [...state];\r\n+    const id: number = newState.findIndex(e => e.id === projectId);\r\n+    newState[id].name = projectName;\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n+    const newState: Project[] = [...state];\r\n+    const project: number = newState.findIndex(e => e.id === projectId);\r\n+    newState[project].users.push(user);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n+    let newState: Project[] = [...state];\r\n+    const project: number = newState.findIndex(e => e.id === projectId);\r\n+    const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n+    newState[project].users.splice(userId, 1);\r\n+    console.log(newState)\r\n+    return newState;\r\n+  }),\r\n+);\r\n+\r\n+\r\n+export const reducers: ActionReducerMap<AppState> = {\r\n+  bugs: BugsReducer,\r\n+  errors: ErrorsReducer,\r\n+  members: MembersReducer,\r\n+  projects: ProjectReducer,\r\n+}\r\n"
                },
                {
                    "date": 1627505510025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     let newState: Project[] = [...state];\r\n     const project: number = newState.findIndex(e => e.id === projectId);\r\n     const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n-    newState[project].users.splice(userId, 1);\r\n+    newState[project].users.splice(userId + 1, 1);\r\n     console.log(newState)\r\n     return newState;\r\n   }),\r\n );\r\n@@ -64,136 +64,4 @@\n   errors: ErrorsReducer,\r\n   members: MembersReducer,\r\n   projects: ProjectReducer,\r\n }\r\n-import { createReducer, ActionReducerMap, on } from '@ngrx/store';\r\n-import { AppActions } from './app.action';\r\n-import { AppState } from './app.state';\r\n-import { Error } from '../models/error.model';\r\n-import { Bug } from '../models/bug.model';\r\n-import { Project } from '../models/project.model';\r\n-import { User } from '../models/user.model';\r\n-\r\n-export const BugsReducer = createReducer(\r\n-  [] as Bug[],\r\n-  on(AppActions.fetchBugsSuccess, (_, { bugs }) => bugs)\r\n-);\r\n-\r\n-export const ErrorsReducer = createReducer(\r\n-  [] as Error[],\r\n-  on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n-);\r\n-\r\n-export const MembersReducer = createReducer(\r\n-  [] as User[],\r\n-  on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n-    const newState: User[] = [...state];\r\n-    newState.push(user);\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.deleteTeamMember, (state, { id }) => state.filter(e => e.id !== id)),\r\n-  on(AppActions.getTeamMembersSuccess, (_, { users }) => users)\r\n-);\r\n-\r\n-export const ProjectReducer = createReducer(\r\n-  [] as Project[],\r\n-  on(AppActions.addProjectSuccess, (state, { project }) => {\r\n-    const newState: Project[] = [...state];\r\n-    newState.push(project);\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId)),\r\n-  on(AppActions.getProjectSuccess, (_, { projects }) => projects),\r\n-  on(AppActions.renameProjectSuccess, (state, { projectId, projectName }) => {\r\n-    let newState = [...state];\r\n-    const id: number = newState.findIndex(e => e.id === projectId);\r\n-    newState[id].name = projectName;\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n-    const newState: Project[] = [...state];\r\n-    const project: number = newState.findIndex(e => e.id === projectId);\r\n-    newState[project].users.push(user);\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n-    let newState: Project[] = [...state];\r\n-    const project: number = newState.findIndex(e => e.id === projectId);\r\n-    const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n-    newState[project].users.splice(userId, 1);\r\n-    return newState;\r\n-  }),\r\n-);\r\n-\r\n-\r\n-export const reducers: ActionReducerMap<AppState> = {\r\n-  bugs: BugsReducer,\r\n-  errors: ErrorsReducer,\r\n-  members: MembersReducer,\r\n-  projects: ProjectReducer,\r\n-}\r\n-import { createReducer, ActionReducerMap, on } from '@ngrx/store';\r\n-import { AppActions } from './app.action';\r\n-import { AppState } from './app.state';\r\n-import { Error } from '../models/error.model';\r\n-import { Bug } from '../models/bug.model';\r\n-import { Project } from '../models/project.model';\r\n-import { User } from '../models/user.model';\r\n-\r\n-export const BugsReducer = createReducer(\r\n-  [] as Bug[],\r\n-  on(AppActions.fetchBugsSuccess, (_, { bugs }) => bugs)\r\n-);\r\n-\r\n-export const ErrorsReducer = createReducer(\r\n-  [] as Error[],\r\n-  on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n-);\r\n-\r\n-export const MembersReducer = createReducer(\r\n-  [] as User[],\r\n-  on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n-    const newState: User[] = [...state];\r\n-    newState.push(user);\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.deleteTeamMember, (state, { id }) => state.filter(e => e.id !== id)),\r\n-  on(AppActions.getTeamMembersSuccess, (_, { users }) => users)\r\n-);\r\n-\r\n-export const ProjectReducer = createReducer(\r\n-  [] as Project[],\r\n-  on(AppActions.addProjectSuccess, (state, { project }) => {\r\n-    const newState: Project[] = [...state];\r\n-    newState.push(project);\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId)),\r\n-  on(AppActions.getProjectSuccess, (_, { projects }) => projects),\r\n-  on(AppActions.renameProjectSuccess, (state, { projectId, projectName }) => {\r\n-    let newState = [...state];\r\n-    const id: number = newState.findIndex(e => e.id === projectId);\r\n-    newState[id].name = projectName;\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n-    const newState: Project[] = [...state];\r\n-    const project: number = newState.findIndex(e => e.id === projectId);\r\n-    newState[project].users.push(user);\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n-    let newState: Project[] = [...state];\r\n-    const project: number = newState.findIndex(e => e.id === projectId);\r\n-    const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n-    newState[project] = { ...newState[project], users: newState[project].users.splice(userId, 1)}\r\n-    return newState;\r\n-  }),\r\n-);\r\n-\r\n-\r\n-export const reducers: ActionReducerMap<AppState> = {\r\n-  bugs: BugsReducer,\r\n-  errors: ErrorsReducer,\r\n-  members: MembersReducer,\r\n-  projects: ProjectReducer,\r\n-}\r\n"
                },
                {
                    "date": 1627505622060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     let newState: Project[] = [...state];\r\n     const project: number = newState.findIndex(e => e.id === projectId);\r\n     const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n-    newState[project].users.splice(userId + 1, 1);\r\n+    newState[project] = { ...newState[project], users: newState[project].users.splice(userId+1, 1)}\r\n     console.log(newState)\r\n     return newState;\r\n   }),\r\n );\r\n"
                },
                {
                    "date": 1627505828694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { createReducer, ActionReducerMap, on } from '@ngrx/store';\r\n+import { AppActions } from './app.action';\r\n+import { AppState } from './app.state';\r\n+import { Error } from '../models/error.model';\r\n+import { Bug } from '../models/bug.model';\r\n+import { Project } from '../models/project.model';\r\n+import { User } from '../models/user.model';\r\n+\r\n+export const BugsReducer = createReducer(\r\n+  [] as Bug[],\r\n+  on(AppActions.fetchBugsSuccess, (_, { bugs }) => bugs)\r\n+);\r\n+\r\n+export const ErrorsReducer = createReducer(\r\n+  [] as Error[],\r\n+  on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n+);\r\n+\r\n+export const MembersReducer = createReducer(\r\n+  [] as User[],\r\n+  on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n+    const newState: User[] = [...state];\r\n+    newState.push(user);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteTeamMember, (state, { id }) => state.filter(e => e.id !== id)),\r\n+  on(AppActions.getTeamMembersSuccess, (_, { users }) => users)\r\n+);\r\n+\r\n+export const ProjectReducer = createReducer(\r\n+  [] as Project[],\r\n+  on(AppActions.addProjectSuccess, (state, { project }) => {\r\n+    const newState: Project[] = [...state];\r\n+    newState.push(project);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId)),\r\n+  on(AppActions.getProjectSuccess, (_, { projects }) => projects),\r\n+  on(AppActions.renameProjectSuccess, (state, { projectId, projectName }) => {\r\n+    let newState = [...state];\r\n+    const id: number = newState.findIndex(e => e.id === projectId);\r\n+    newState[id].name = projectName;\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n+    const newState: Project[] = [...state];\r\n+    const project: number = newState.findIndex(e => e.id === projectId);\r\n+    newState[project].users.push(user);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n+    let newState: Project[] = [...state];\r\n+    const project: number = newState.findIndex(e => e.id === projectId);\r\n+    newState[project] = { ...newState[project], users: newState[project].users.filter(e => e.id !== id) }\r\n+    return newState;\r\n+  }),\r\n+);\r\n+\r\n+\r\n+export const reducers: ActionReducerMap<AppState> = {\r\n+  bugs: BugsReducer,\r\n+  errors: ErrorsReducer,\r\n+  members: MembersReducer,\r\n+  projects: ProjectReducer,\r\n+}\r\n"
                },
                {
                    "date": 1627508056105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,71 +62,4 @@\n   errors: ErrorsReducer,\r\n   members: MembersReducer,\r\n   projects: ProjectReducer,\r\n }\r\n-import { createReducer, ActionReducerMap, on } from '@ngrx/store';\r\n-import { AppActions } from './app.action';\r\n-import { AppState } from './app.state';\r\n-import { Error } from '../models/error.model';\r\n-import { Bug } from '../models/bug.model';\r\n-import { Project } from '../models/project.model';\r\n-import { User } from '../models/user.model';\r\n-\r\n-export const BugsReducer = createReducer(\r\n-  [] as Bug[],\r\n-  on(AppActions.fetchBugsSuccess, (_, { bugs }) => bugs)\r\n-);\r\n-\r\n-export const ErrorsReducer = createReducer(\r\n-  [] as Error[],\r\n-  on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n-);\r\n-\r\n-export const MembersReducer = createReducer(\r\n-  [] as User[],\r\n-  on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n-    const newState: User[] = [...state];\r\n-    newState.push(user);\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.deleteTeamMember, (state, { id }) => state.filter(e => e.id !== id)),\r\n-  on(AppActions.getTeamMembersSuccess, (_, { users }) => users)\r\n-);\r\n-\r\n-export const ProjectReducer = createReducer(\r\n-  [] as Project[],\r\n-  on(AppActions.addProjectSuccess, (state, { project }) => {\r\n-    const newState: Project[] = [...state];\r\n-    newState.push(project);\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId)),\r\n-  on(AppActions.getProjectSuccess, (_, { projects }) => projects),\r\n-  on(AppActions.renameProjectSuccess, (state, { projectId, projectName }) => {\r\n-    let newState = [...state];\r\n-    const id: number = newState.findIndex(e => e.id === projectId);\r\n-    newState[id].name = projectName;\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n-    const newState: Project[] = [...state];\r\n-    const project: number = newState.findIndex(e => e.id === projectId);\r\n-    newState[project].users.push(user);\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n-    let newState: Project[] = [...state];\r\n-    const project: number = newState.findIndex(e => e.id === projectId);\r\n-    const userId: number = newState[project].users.findIndex(e => e.id === id);\r\n-    newState[project] = { ...newState[project], users: newState[project].users.splice(userId+1, 1)}\r\n-    console.log(newState)\r\n-    return newState;\r\n-  }),\r\n-);\r\n-\r\n-\r\n-export const reducers: ActionReducerMap<AppState> = {\r\n-  bugs: BugsReducer,\r\n-  errors: ErrorsReducer,\r\n-  members: MembersReducer,\r\n-  projects: ProjectReducer,\r\n-}\r\n"
                },
                {
                    "date": 1627513351117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,11 +55,16 @@\n     return newState;\r\n   }),\r\n );\r\n \r\n+export const ProjectUsersReducer = createReducer(\r\n+  [] as User[],\r\n+  on(AppActions.fetchProjectUsersSuccess, (_, { users }) => users)\r\n+);\r\n \r\n export const reducers: ActionReducerMap<AppState> = {\r\n   bugs: BugsReducer,\r\n   errors: ErrorsReducer,\r\n   members: MembersReducer,\r\n   projects: ProjectReducer,\r\n+  projectUsers: ProjectUsersReducer\r\n }\r\n"
                },
                {
                    "date": 1627952747817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n   on(AppActions.getProjectSuccess, (_, { projects }) => projects),\r\n   on(AppActions.renameProjectSuccess, (state, { projectId, projectName }) => {\r\n     let newState = [...state];\r\n     const id: number = newState.findIndex(e => e.id === projectId);\r\n-    newState[id].name = projectName;\r\n+    newState[id] = {...newState[id],name:projectName};\r\n     return newState;\r\n   }),\r\n   on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n"
                },
                {
                    "date": 1627954055664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+import { createReducer, ActionReducerMap, on } from '@ngrx/store';\r\n+import { AppActions } from './app.action';\r\n+import { AppState } from './app.state';\r\n+import { Error } from '../models/error.model';\r\n+import { Bug } from '../models/bug.model';\r\n+import { Project } from '../models/project.model';\r\n+import { User } from '../models/user.model';\r\n+\r\n+export const BugsReducer = createReducer(\r\n+  [] as Bug[],\r\n+  on(AppActions.fetchBugsSuccess, (_, { bugs }) => bugs)\r\n+);\r\n+\r\n+export const ErrorsReducer = createReducer(\r\n+  [] as Error[],\r\n+  on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n+);\r\n+\r\n+export const MembersReducer = createReducer(\r\n+  [] as User[],\r\n+  on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n+    const newState: User[] = [...state];\r\n+    newState.push(user);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteTeamMember, (state, { id }) => state.filter(e => e.id !== id)),\r\n+  on(AppActions.getTeamMembersSuccess, (_, { users }) => users)\r\n+);\r\n+\r\n+export const ProjectReducer = createReducer(\r\n+  [] as Project[],\r\n+  on(AppActions.addProjectSuccess, (state, { project }) => {\r\n+    const newState: Project[] = [...state];\r\n+    newState.push(project);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId)),\r\n+  on(AppActions.getProjectSuccess, (_, { projects }) => projects),\r\n+  on(AppActions.renameProjectSuccess, (state, { projectId, projectName }) => {\r\n+    let newState = [...state];\r\n+    const id: number = newState.findIndex(e => e.id === projectId);\r\n+    newState[id] = { ...newState[id], name: projectName };\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n+    const newState: Project[] = [...state];\r\n+    const project: number = newState.findIndex(e => e.id === projectId);\r\n+    newState[project].users.push(user);\r\n+    return newState;\r\n+  }),\r\n+  on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n+    let newState: Project[] = [...state];\r\n+    const project: number = newState.findIndex(e => e.id === projectId);\r\n+    return { ...newState, newState[project]: { ...newState[project], users: newState[project].users.filter(e => e.id !== id) } };\r\n+  }),\r\n+);\r\n+\r\n+export const ProjectUsersReducer = createReducer(\r\n+  [] as User[],\r\n+  on(AppActions.fetchProjectUsersSuccess, (_, { users }) => users)\r\n+);\r\n+\r\n+export const reducers: ActionReducerMap<AppState> = {\r\n+  bugs: BugsReducer,\r\n+  errors: ErrorsReducer,\r\n+  members: MembersReducer,\r\n+  projects: ProjectReducer,\r\n+  projectUsers: ProjectUsersReducer\r\n+}\r\n"
                },
                {
                    "date": 1627954152514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,82 +48,12 @@\n     newState[project].users.push(user);\r\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n-    let newState: Project[] = [...state];\r\n-    const project: number = newState.findIndex(e => e.id === projectId);\r\n-    return { ...newState, newState[project]: { ...newState[project], users: newState[project].users.filter(e => e.id !== id) } };\r\n-  }),\r\n-);\r\n-\r\n-export const ProjectUsersReducer = createReducer(\r\n-  [] as User[],\r\n-  on(AppActions.fetchProjectUsersSuccess, (_, { users }) => users)\r\n-);\r\n-\r\n-export const reducers: ActionReducerMap<AppState> = {\r\n-  bugs: BugsReducer,\r\n-  errors: ErrorsReducer,\r\n-  members: MembersReducer,\r\n-  projects: ProjectReducer,\r\n-  projectUsers: ProjectUsersReducer\r\n-}\r\n-import { createReducer, ActionReducerMap, on } from '@ngrx/store';\r\n-import { AppActions } from './app.action';\r\n-import { AppState } from './app.state';\r\n-import { Error } from '../models/error.model';\r\n-import { Bug } from '../models/bug.model';\r\n-import { Project } from '../models/project.model';\r\n-import { User } from '../models/user.model';\r\n-\r\n-export const BugsReducer = createReducer(\r\n-  [] as Bug[],\r\n-  on(AppActions.fetchBugsSuccess, (_, { bugs }) => bugs)\r\n-);\r\n-\r\n-export const ErrorsReducer = createReducer(\r\n-  [] as Error[],\r\n-  on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n-);\r\n-\r\n-export const MembersReducer = createReducer(\r\n-  [] as User[],\r\n-  on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n-    const newState: User[] = [...state];\r\n-    newState.push(user);\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.deleteTeamMember, (state, { id }) => state.filter(e => e.id !== id)),\r\n-  on(AppActions.getTeamMembersSuccess, (_, { users }) => users)\r\n-);\r\n-\r\n-export const ProjectReducer = createReducer(\r\n-  [] as Project[],\r\n-  on(AppActions.addProjectSuccess, (state, { project }) => {\r\n     const newState: Project[] = [...state];\r\n-    newState.push(project);\r\n-    return newState;\r\n+    const project: Project = newState.find(e => e.id === projectId);\r\n+    return { ...newState, project: { ...project, users: project.users.filter(e => e.id !== id) } };\r\n   }),\r\n-  on(AppActions.deleteProject, (state, { projectId }) => state.filter(e => e.id !== projectId)),\r\n-  on(AppActions.getProjectSuccess, (_, { projects }) => projects),\r\n-  on(AppActions.renameProjectSuccess, (state, { projectId, projectName }) => {\r\n-    let newState = [...state];\r\n-    const id: number = newState.findIndex(e => e.id === projectId);\r\n-    newState[id] = {...newState[id],name:projectName};\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n-    const newState: Project[] = [...state];\r\n-    const project: number = newState.findIndex(e => e.id === projectId);\r\n-    newState[project].users.push(user);\r\n-    return newState;\r\n-  }),\r\n-  on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n-    let newState: Project[] = [...state];\r\n-    const project: number = newState.findIndex(e => e.id === projectId);\r\n-    newState[project] = { ...newState[project], users: newState[project].users.filter(e => e.id !== id) }\r\n-    return newState;\r\n-  }),\r\n );\r\n \r\n export const ProjectUsersReducer = createReducer(\r\n   [] as User[],\r\n"
                },
                {
                    "date": 1627954246444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n-    const project: Project = newState.find(e => e.id === projectId);\r\n+    const project: Project = newState.find(e => e.id === projectId) ? newState.find(e => e.id === projectId: undefined;\r\n     return { ...newState, project: { ...project, users: project.users.filter(e => e.id !== id) } };\r\n   }),\r\n );\r\n \r\n"
                },
                {
                    "date": 1627954275276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n-    const project: Project = newState.find(e => e.id === projectId) ? newState.find(e => e.id === projectId: undefined;\r\n+    const project: Project = newState.find(e => e.id === projectId) ? newState.find(e => e.id === projectId): null;\r\n     return { ...newState, project: { ...project, users: project.users.filter(e => e.id !== id) } };\r\n   }),\r\n );\r\n \r\n"
                },
                {
                    "date": 1627954328110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n-    const project: Project = newState.find(e => e.id === projectId) ? newState.find(e => e.id === projectId): null;\r\n+    const project: any = newState.find(e => e.id === projectId) ? newState.find(e => e.id === projectId): null;\r\n     return { ...newState, project: { ...project, users: project.users.filter(e => e.id !== id) } };\r\n   }),\r\n );\r\n \r\n"
                },
                {
                    "date": 1627954359040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n-    const project: any = newState.find(e => e.id === projectId) ? newState.find(e => e.id === projectId): null;\r\n+    const project: Project = newState.find(e => e.id === projectId);\r\n     return { ...newState, project: { ...project, users: project.users.filter(e => e.id !== id) } };\r\n   }),\r\n );\r\n \r\n"
                },
                {
                    "date": 1627954413934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,10 +49,10 @@\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n-    const project: Project = newState.find(e => e.id === projectId);\r\n-    return { ...newState, project: { ...project, users: project.users.filter(e => e.id !== id) } };\r\n+    const project: Project | undefined = newState.find(e => e.id === projectId);\r\n+    return { ...newState, project: { ...project, users: project?.users.filter(e => e.id !== id) } };\r\n   }),\r\n );\r\n \r\n export const ProjectUsersReducer = createReducer(\r\n"
                },
                {
                    "date": 1627954920542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,11 +43,10 @@\n     return newState;\r\n   }),\r\n   on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n-    const project: number = newState.findIndex(e => e.id === projectId);\r\n-    newState[project].users.push(user);\r\n-    return newState;\r\n+    const project: Project | undefined = newState.find(e => e.id === projectId);\r\n+    return { ...newState, project: { ...project, users: project?.users.push(user) } };\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n     const project: Project | undefined = newState.find(e => e.id === projectId);\r\n"
                },
                {
                    "date": 1627955114207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,14 +44,14 @@\n   }),\r\n   on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n     const project: Project | undefined = newState.find(e => e.id === projectId);\r\n-    return { ...newState, project: { ...project, users: project?.users.push(user) } };\r\n+    return { ...newState,  ...project, users: project?.users.push(user) };\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n     const project: Project | undefined = newState.find(e => e.id === projectId);\r\n-    return { ...newState, project: { ...project, users: project?.users.filter(e => e.id !== id) } };\r\n+    return { ...newState, ...project, users: project?.users.filter(e => e.id !== id) };\r\n   }),\r\n );\r\n \r\n export const ProjectUsersReducer = createReducer(\r\n"
                },
                {
                    "date": 1627955427628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,12 @@\n   }),\r\n   on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n     const project: Project | undefined = newState.find(e => e.id === projectId);\r\n-    return { ...newState,  ...project, users: project?.users.push(user) };\r\n+    if (project) {\r\n+      return { ...newState, ...project, users: [...project?.users, user] };\r\n+    }\r\n+    return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n     const project: Project | undefined = newState.find(e => e.id === projectId);\r\n"
                },
                {
                    "date": 1628099403810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,16 +45,19 @@\n   on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n     const project: Project | undefined = newState.find(e => e.id === projectId);\r\n     if (project) {\r\n-      return { ...newState, ...project, users: [...project?.users, user] };\r\n+      return [ ...newState, {...project, users: [...project?.users, user]} ];\r\n     }\r\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n     const project: Project | undefined = newState.find(e => e.id === projectId);\r\n-    return { ...newState, ...project, users: project?.users.filter(e => e.id !== id) };\r\n+    if (project) {\r\n+      return [ ...newState, {...project, users: project?.users.filter(e => e.id !== id)} ];\r\n+    }\r\n+    return newState;\r\n   }),\r\n );\r\n \r\n export const ProjectUsersReducer = createReducer(\r\n"
                },
                {
                    "date": 1628099622118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,19 +43,19 @@\n     return newState;\r\n   }),\r\n   on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n-    const project: Project | undefined = newState.find(e => e.id === projectId);\r\n-    if (project) {\r\n-      return [ ...newState, {...project, users: [...project?.users, user]} ];\r\n+    const projectIndex: number = newState.findIndex(e => e.id === projectId);\r\n+    if (projectIndex !== -1) {\r\n+      newState[projectIndex].users = [...newState[projectIndex].users, user];\r\n     }\r\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n-    const project: Project | undefined = newState.find(e => e.id === projectId);\r\n-    if (project) {\r\n-      return [ ...newState, {...project, users: project?.users.filter(e => e.id !== id)} ];\r\n+    const project: number = newState.findIndex(e => e.id === projectId);\r\n+    if (project !== -1) {\r\n+      return [...newState, { ...project, users: project?.users.filter(e => e.id !== id) }];\r\n     }\r\n     return newState;\r\n   }),\r\n );\r\n"
                },
                {
                    "date": 1628099679702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,11 +51,11 @@\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n-    const project: number = newState.findIndex(e => e.id === projectId);\r\n-    if (project !== -1) {\r\n-      return [...newState, { ...project, users: project?.users.filter(e => e.id !== id) }];\r\n+    const projectIndex: number = newState.findIndex(e => e.id === projectId);\r\n+    if (projectIndex !== -1) {\r\n+      newState[projectIndex].users = newState[projectIndex].users.filter(e => e.id !== id)\r\n     }\r\n     return newState;\r\n   }),\r\n );\r\n"
                },
                {
                    "date": 1628099818514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,17 +45,17 @@\n   on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n     const projectIndex: number = newState.findIndex(e => e.id === projectId);\r\n     if (projectIndex !== -1) {\r\n-      newState[projectIndex].users = [...newState[projectIndex].users, user];\r\n+      newState[projectIndex] = { ...newState[projectIndex], users :[...newState[projectIndex].users, user] };\r\n     }\r\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n     const projectIndex: number = newState.findIndex(e => e.id === projectId);\r\n     if (projectIndex !== -1) {\r\n-      newState[projectIndex].users = newState[projectIndex].users.filter(e => e.id !== id)\r\n+      newState[projectIndex] = { ...newState[projectIndex], users: newState[projectIndex].users.filter(e => e.id !== id) }\r\n     }\r\n     return newState;\r\n   }),\r\n );\r\n"
                },
                {
                    "date": 1628100734139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n   on(AppActions.addProjectTeamMemberSuccess, (state, { user, projectId }) => {\r\n     const newState: Project[] = [...state];\r\n     const projectIndex: number = newState.findIndex(e => e.id === projectId);\r\n     if (projectIndex !== -1) {\r\n-      newState[projectIndex] = { ...newState[projectIndex], users :[...newState[projectIndex].users, user] };\r\n+      newState[projectIndex] = { ...newState[projectIndex], users: [...newState[projectIndex].users, user] };\r\n     }\r\n     return newState;\r\n   }),\r\n   on(AppActions.deleteProjectTeamMember, (state, { id, projectId }) => {\r\n@@ -64,11 +64,25 @@\n   [] as User[],\r\n   on(AppActions.fetchProjectUsersSuccess, (_, { users }) => users)\r\n );\r\n \r\n+export const TeamUsersReducer = createReducer(\r\n+  [] as User[],\r\n+  on(AppActions.fetchProjectUsersSuccess, (_, { users }) => users),\r\n+  on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n+    const newState: User[] = [...state];\r\n+    return [...newState, user];\r\n+  }),\r\n+  on(AppActions.deleteTeamMemberSuccess, (state, { id }) => {\r\n+    const newState: User[] = [...state];\r\n+    return newState.filter(e => e.id !== id);\r\n+  }),\r\n+);\r\n+\r\n export const reducers: ActionReducerMap<AppState> = {\r\n   bugs: BugsReducer,\r\n   errors: ErrorsReducer,\r\n   members: MembersReducer,\r\n   projects: ProjectReducer,\r\n-  projectUsers: ProjectUsersReducer\r\n+  projectUsers: ProjectUsersReducer,\r\n+  teamUsers: TeamUsersReducer\r\n }\r\n"
                },
                {
                    "date": 1628101584047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,15 +17,17 @@\n );\r\n \r\n export const MembersReducer = createReducer(\r\n   [] as User[],\r\n+  on(AppActions.fetchProjectUsersSuccess, (_, { users }) => users),\r\n   on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n     const newState: User[] = [...state];\r\n-    newState.push(user);\r\n-    return newState;\r\n+    return [...newState, user];\r\n   }),\r\n-  on(AppActions.deleteTeamMember, (state, { id }) => state.filter(e => e.id !== id)),\r\n-  on(AppActions.getTeamMembersSuccess, (_, { users }) => users)\r\n+  on(AppActions.deleteTeamMemberSuccess, (state, { id }) => {\r\n+    const newState: User[] = [...state];\r\n+    return newState.filter(e => e.id !== id);\r\n+  }),\r\n );\r\n \r\n export const ProjectReducer = createReducer(\r\n   [] as Project[],\r\n@@ -64,25 +66,13 @@\n   [] as User[],\r\n   on(AppActions.fetchProjectUsersSuccess, (_, { users }) => users)\r\n );\r\n \r\n-export const TeamUsersReducer = createReducer(\r\n-  [] as User[],\r\n-  on(AppActions.fetchProjectUsersSuccess, (_, { users }) => users),\r\n-  on(AppActions.addTeamMemberSuccess, (state, { user }) => {\r\n-    const newState: User[] = [...state];\r\n-    return [...newState, user];\r\n-  }),\r\n-  on(AppActions.deleteTeamMemberSuccess, (state, { id }) => {\r\n-    const newState: User[] = [...state];\r\n-    return newState.filter(e => e.id !== id);\r\n-  }),\r\n-);\r\n \r\n+\r\n export const reducers: ActionReducerMap<AppState> = {\r\n   bugs: BugsReducer,\r\n   errors: ErrorsReducer,\r\n   members: MembersReducer,\r\n   projects: ProjectReducer,\r\n   projectUsers: ProjectUsersReducer,\r\n-  teamUsers: TeamUsersReducer\r\n }\r\n"
                }
            ],
            "date": 1626516152362,
            "name": "Commit-0",
            "content": "import { createReducer, ActionReducerMap, on } from '@ngrx/store';\r\nimport { AppActions } from './app.action';\r\nimport { AppState } from './app.state';\r\nimport { Error } from '../models/error.model';\r\nimport { Bug } from '../models/bug.model';\r\n\r\nexport const bugsReducer = createReducer(\r\n  [] as Bug[],\r\n  on(AppActions.fetchBugsSuccess, (_, { bugs }) => bugs)\r\n);\r\n\r\nexport const errorsReducer = createReducer(\r\n  [] as Error[],\r\n  on(AppActions.fetchErrorsSuccess, (_, { error }) => error)\r\n);\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {\r\n  bugs: bugsReducer,\r\n  errors: errorsReducer\r\n}\r\n"
        }
    ]
}