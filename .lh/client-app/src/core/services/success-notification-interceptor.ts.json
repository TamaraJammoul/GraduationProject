{
    "sourceFile": "client-app/src/core/services/success-notification-interceptor.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1627517988677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1627517988675,
            "name": "Commit-0",
            "content": "import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpResponse\r\n} from '@angular/common/http';\r\nimport { SnackBarNotificationService } from '@core/services/snackbar-notification.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SuccessMessageInterceptorService implements HttpInterceptor {\r\n  constructor(\r\n    private snackBarNotificationService: SnackBarNotificationService\r\n  ) { }\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      map((event: HttpEvent<any>) => {\r\n\r\n        if (req.urlWithParams.indexOf('connect/token') > -1) {\r\n          return event;\r\n        }\r\n\r\n        if (event instanceof HttpResponse) {\r\n          if (this.doesShowSuccessMessage(req, event)) {\r\n            this.showSuccessMessage();\r\n          }\r\n        }\r\n        return event;\r\n      })\r\n    );\r\n  }\r\n\r\n  doesShowSuccessMessage(req: HttpRequest<any>, res: HttpResponse<any>): boolean {\r\n    if (req.headers.get('process') && req.headers.get('process') === 'background') {\r\n      return false;\r\n    }\r\n    if (req.url.indexOf('connect/token') > -1) {\r\n      return false;\r\n    }\r\n    if (req.method !== 'GET' && res.status === 200) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  showSuccessMessage() {\r\n    this.snackBarNotificationService.success('core.message', 'top', 'right');\r\n  }\r\n}\r\n"
        }
    ]
}