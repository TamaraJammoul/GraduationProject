{
    "sourceFile": "client-app/src/core/services/can-access-feature.guard.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1627517528659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1627517528659,
            "name": "Commit-0",
            "content": "import { Injectable } from '@angular/core';\r\nimport { CanLoad, Route, Router, UrlTree } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { UserRightsService } from '@core/services/user-rights.service';\r\nimport { first, switchMap, map } from 'rxjs/operators';\r\nimport { Feature } from '@libs/shared/settings/common.settings';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CanAccessFeatureGuard implements CanLoad {\r\n\r\n  constructor(private userRightsService: UserRightsService, private router: Router) { }\r\n\r\n  canLoad(route: Route): Observable<boolean | UrlTree> {\r\n    const feature = route.data.feature as Feature;\r\n    if (!feature) {\r\n      throw new Error('Feature not defined');\r\n    }\r\n    return this.userRightsService.canAccess(feature).pipe(\r\n      first(),\r\n      switchMap(canAccess => canAccess ? of(canAccess) : this.getStartupUrlTree())\r\n    );\r\n  }\r\n\r\n  private getStartupUrlTree(): Observable<UrlTree> {\r\n    return this.userRightsService.getStartupRouteTree().pipe(\r\n      map(route => this.router.parseUrl(route))\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}