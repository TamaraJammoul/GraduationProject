{
    "sourceFile": "client-app/src/services/project.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1626809968407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1626810207098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,25 +2,25 @@\n import { map } from 'rxjs/operators';\r\n import { Injectable } from '@angular/core';\r\n import { environment } from '../environment';\r\n import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n-import { Error } from '../models/error.model';\r\n+import { Project } from '../models/project.model';\r\n \r\n @Injectable({ providedIn: 'root' })\r\n export class ProjectService {\r\n \r\n     endpointUrl = `${environment.apiUrl}/Errors`;\r\n \r\n     constructor(private httpClient: HttpClient) { }\r\n-    addProject(name: String): Observable<any> {\r\n+    addProject(name: String): Observable<Project> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n             }),\r\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n         };\r\n-        return this.httpClient.post<any>(this.endpointUrl, name, httpOptions).pipe(\r\n+        return this.httpClient.post<Project>(this.endpointUrl, name, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n"
                },
                {
                    "date": 1626810820692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,5 +63,20 @@\n         return this.httpClient.delete<any>(this.endpointUrl, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n+\r\n+    renameProjectMember(projectId: string, projectName: string): Observable<any> {\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+                .set('projectId', projectId)\r\n+                .set('projectName', projectName)\r\n+        };\r\n+        return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n+            map(data => data)\r\n+        );\r\n+    }\r\n }\r\n"
                }
            ],
            "date": 1626809968407,
            "name": "Commit-0",
            "content": "import { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../environment';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Error } from '../models/error.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProjectService {\r\n\r\n    endpointUrl = `${environment.apiUrl}/Errors`;\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n    addProject(name: String): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            params: new HttpParams()\r\n                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n        };\r\n        return this.httpClient.post<any>(this.endpointUrl, name, httpOptions).pipe(\r\n            map(data => data)\r\n        );\r\n    }\r\n\r\n    deleteProject(projectId: string): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            params: new HttpParams()\r\n                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                .set('projectId', projectId)\r\n        };\r\n        return this.httpClient.delete<any>(this.endpointUrl, httpOptions).pipe(\r\n            map(data => data)\r\n        );\r\n    }\r\n\r\n    addProjectMember(memberEmail: String): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            params: new HttpParams()\r\n                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n        };\r\n        return this.httpClient.post<any>(this.endpointUrl, memberEmail, httpOptions).pipe(\r\n            map(data => data)\r\n        );\r\n    }\r\n\r\n    deleteProjectMember(memberEmail: string): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            params: new HttpParams()\r\n                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                .set('memberEmail', memberEmail)\r\n        };\r\n        return this.httpClient.delete<any>(this.endpointUrl, httpOptions).pipe(\r\n            map(data => data)\r\n        );\r\n    }\r\n}\r\n"
        }
    ]
}