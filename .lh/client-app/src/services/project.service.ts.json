{
    "sourceFile": "client-app/src/services/project.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1626809968407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1626810207098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,25 +2,25 @@\n import { map } from 'rxjs/operators';\r\n import { Injectable } from '@angular/core';\r\n import { environment } from '../environment';\r\n import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n-import { Error } from '../models/error.model';\r\n+import { Project } from '../models/project.model';\r\n \r\n @Injectable({ providedIn: 'root' })\r\n export class ProjectService {\r\n \r\n     endpointUrl = `${environment.apiUrl}/Errors`;\r\n \r\n     constructor(private httpClient: HttpClient) { }\r\n-    addProject(name: String): Observable<any> {\r\n+    addProject(name: String): Observable<Project> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n             }),\r\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n         };\r\n-        return this.httpClient.post<any>(this.endpointUrl, name, httpOptions).pipe(\r\n+        return this.httpClient.post<Project>(this.endpointUrl, name, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n"
                },
                {
                    "date": 1626810820692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,5 +63,20 @@\n         return this.httpClient.delete<any>(this.endpointUrl, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n+\r\n+    renameProjectMember(projectId: string, projectName: string): Observable<any> {\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+                .set('projectId', projectId)\r\n+                .set('projectName', projectName)\r\n+        };\r\n+        return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n+            map(data => data)\r\n+        );\r\n+    }\r\n }\r\n"
                },
                {
                    "date": 1627114118006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,22 @@\n \r\n     endpointUrl = `${environment.apiUrl}/Errors`;\r\n \r\n     constructor(private httpClient: HttpClient) { }\r\n+\r\n+        gteProjects(): Observable<Project[]> {\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+        };\r\n+        return this.httpClient.get<Project[]>(this.endpointUrl, httpOptions).pipe(\r\n+            map(data => data)\r\n+        );\r\n+    }\r\n+\r\n     addProject(name: String): Observable<Project> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n"
                },
                {
                    "date": 1627114253518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     endpointUrl = `${environment.apiUrl}/Errors`;\r\n \r\n     constructor(private httpClient: HttpClient) { }\r\n \r\n-        gteProjects(): Observable<Project[]> {\r\n+        getProjects(): Observable<Project[]> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n             }),\r\n"
                },
                {
                    "date": 1627114378628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \r\n @Injectable({ providedIn: 'root' })\r\n export class ProjectService {\r\n \r\n-    endpointUrl = `${environment.apiUrl}/Errors`;\r\n+    endpointUrl = `${environment.apiUrl}/Projects`;\r\n \r\n     constructor(private httpClient: HttpClient) { }\r\n \r\n         getProjects(): Observable<Project[]> {\r\n"
                },
                {
                    "date": 1627114604204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     endpointUrl = `${environment.apiUrl}/Projects`;\r\n \r\n     constructor(private httpClient: HttpClient) { }\r\n \r\n-        getProjects(): Observable<Project[]> {\r\n+    getProjects(): Observable<Project[]> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n             }),\r\n@@ -51,17 +51,17 @@\n             map(data => data)\r\n         );\r\n     }\r\n \r\n-    addProjectMember(memberEmail: String): Observable<any> {\r\n+    addProjectMember(memberEmail: string): Observable<any> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n             }),\r\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n         };\r\n-        return this.httpClient.post<any>(this.endpointUrl, memberEmail, httpOptions).pipe(\r\n+        return this.httpClient.post<any>(this.endpointUrl + 'users', memberEmail, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n@@ -73,9 +73,9 @@\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('memberEmail', memberEmail)\r\n         };\r\n-        return this.httpClient.delete<any>(this.endpointUrl, httpOptions).pipe(\r\n+        return this.httpClient.delete<any>(this.endpointUrl + 'users', httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n"
                },
                {
                    "date": 1627163114050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { Injectable } from '@angular/core';\r\n import { environment } from '../environment';\r\n import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n import { Project } from '../models/project.model';\r\n+import { User } from '../models/user.model';\r\n \r\n @Injectable({ providedIn: 'root' })\r\n export class ProjectService {\r\n \r\n@@ -51,17 +52,17 @@\n             map(data => data)\r\n         );\r\n     }\r\n \r\n-    addProjectMember(memberEmail: string): Observable<any> {\r\n+    addProjectMember(memberEmail: string): Observable<User> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n             }),\r\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n         };\r\n-        return this.httpClient.post<any>(this.endpointUrl + 'users', memberEmail, httpOptions).pipe(\r\n+        return this.httpClient.post<User>(this.endpointUrl + 'users', memberEmail, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n"
                },
                {
                    "date": 1627163393007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,16 +65,17 @@\n             map(data => data)\r\n         );\r\n     }\r\n \r\n-    deleteProjectMember(memberEmail: string): Observable<any> {\r\n+    deleteProjectMember(userId: string, projectId: string): Observable<any> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n             }),\r\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n-                .set('memberEmail', memberEmail)\r\n+                .set('userId', userId)\r\n+                .set('projectId', projectId)\r\n         };\r\n         return this.httpClient.delete<any>(this.endpointUrl + 'users', httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n"
                },
                {
                    "date": 1627163755255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,17 +52,19 @@\n             map(data => data)\r\n         );\r\n     }\r\n \r\n-    addProjectMember(memberEmail: string): Observable<User> {\r\n+    addProjectMember(userId: string, projectId: string): Observable<User> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n             }),\r\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+                .set('projectId', projectId)\r\n+                .set('userId', userId)\r\n         };\r\n-        return this.httpClient.post<User>(this.endpointUrl + 'users', memberEmail, httpOptions).pipe(\r\n+        return this.httpClient.post<User>(this.endpointUrl + 'users', httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n"
                },
                {
                    "date": 1627504430106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('projectId', projectId)\r\n                 .set('userId', userId)\r\n         };\r\n-        return this.httpClient.post<User>(this.endpointUrl + 'users', httpOptions).pipe(\r\n+        return this.httpClient.post<User>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n@@ -77,13 +77,14 @@\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('userId', userId)\r\n                 .set('projectId', projectId)\r\n         };\r\n-        return this.httpClient.delete<any>(this.endpointUrl + 'users', httpOptions).pipe(\r\n+        return this.httpClient.delete<any>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n+\r\n     renameProjectMember(projectId: string, projectName: string): Observable<any> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n"
                },
                {
                    "date": 1627506933096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n             }),\r\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('projectId', projectId)\r\n-                .set('projectName', projectName)\r\n+                .set('name', projectName)\r\n         };\r\n         return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n"
                },
                {
                    "date": 1627507461784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,7 @@\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('projectId', projectId)\r\n                 .set('name', projectName)\r\n         };\r\n-        return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n-            map(data => data)\r\n-        );\r\n+        return this.httpClient.patch<any>(this.endpointUrl, httpOptions);\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1627508802379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,7 +93,9 @@\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('projectId', projectId)\r\n                 .set('name', projectName)\r\n         };\r\n-        return this.httpClient.patch<any>(this.endpointUrl, httpOptions);\r\n+        return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n+            map(data => console.log(data))\r\n+        );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1627513517449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,22 @@\n             map(data => data)\r\n         );\r\n     }\r\n \r\n+    getProjectUsers(projectId: string): Observable<Project> {\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+                .set('projectId', projectId)\r\n+        };\r\n+        return this.httpClient.get<Project>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n+            map(data => data)\r\n+        );\r\n+    }\r\n+\r\n     deleteProject(projectId: string): Observable<any> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n"
                },
                {
                    "date": 1627513552885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,18 +38,18 @@\n             map(data => data)\r\n         );\r\n     }\r\n \r\n-    getProjectUsers(projectId: string): Observable<Project> {\r\n+    getProjectUsers(projectId: string): Observable<User[]> {\r\n         const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n             }),\r\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('projectId', projectId)\r\n         };\r\n-        return this.httpClient.get<Project>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n+        return this.httpClient.get<User[]>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n"
                },
                {
                    "date": 1627592556480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+import { Observable } from 'rxjs';\r\n+import { map } from 'rxjs/operators';\r\n+import { Injectable } from '@angular/core';\r\n+import { environment } from '../environment';\r\n+import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n+import { Project } from '../models/project.model';\r\n+import { User } from '../models/user.model';\r\n+\r\n+@Injectable({ providedIn: 'root' })\r\n+export class ProjectService {\r\n+\r\n+    endpointUrl = `${environment.apiUrl}/Projects`;\r\n+\r\n+    constructor(private httpClient: HttpClient) { }\r\n+\r\n+    getProjects(): Observable<Project[]> {\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+        };\r\n+        return this.httpClient.get<Project[]>(this.endpointUrl, httpOptions).pipe(\r\n+            map(data => data)\r\n+        );\r\n+    }\r\n+\r\n+    addProject(name: String): Observable<Project> {\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+        };\r\n+        return this.httpClient.post<Project>(this.endpointUrl, name, httpOptions).pipe(\r\n+            map(data => data)\r\n+        );\r\n+    }\r\n+\r\n+    getProjectUsers(projectId: string): Observable<User[]> {\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+                .set('projectId', projectId)\r\n+        };\r\n+        return this.httpClient.get<User[]>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n+            map(data => data)\r\n+        );\r\n+    }\r\n+\r\n+    deleteProject(projectId: string): Observable<any> {\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+                .set('projectId', projectId)\r\n+        };\r\n+        return this.httpClient.delete<any>(this.endpointUrl, httpOptions).pipe(\r\n+            map(data => data)\r\n+        );\r\n+    }\r\n+\r\n+    addProjectMember(userId: string, projectId: string): Observable<User> {\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+                .set('projectId', projectId)\r\n+                .set('userId', userId)\r\n+        };\r\n+        return this.httpClient.post<User>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n+            map(data => data)\r\n+        );\r\n+    }\r\n+\r\n+    deleteProjectMember(userId: string, projectId: string): Observable<any> {\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+                .set('userId', userId)\r\n+                .set('projectId', projectId)\r\n+        };\r\n+        return this.httpClient.delete<any>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n+            map(data => data)\r\n+        );\r\n+    }\r\n+\r\n+\r\n+    renameProjectMember(projectId: string, projectName: string): Observable<any> {\r\n+        const httpOptions = {\r\n+\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+                .set('projectId', projectId)\r\n+                .set('name', projectName)\r\n+        };\r\n+        return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n+            map(data => console.log(data))\r\n+        );\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1627608437776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,127 +99,14 @@\n \r\n \r\n     renameProjectMember(projectId: string, projectName: string): Observable<any> {\r\n         const httpOptions = {\r\n-\r\n-            params: new HttpParams()\r\n-                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n-                .set('projectId', projectId)\r\n-                .set('name', projectName)\r\n-        };\r\n-        return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n-            map(data => console.log(data))\r\n-        );\r\n-    }\r\n-}\r\n-import { Observable } from 'rxjs';\r\n-import { map } from 'rxjs/operators';\r\n-import { Injectable } from '@angular/core';\r\n-import { environment } from '../environment';\r\n-import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n-import { Project } from '../models/project.model';\r\n-import { User } from '../models/user.model';\r\n-\r\n-@Injectable({ providedIn: 'root' })\r\n-export class ProjectService {\r\n-\r\n-    endpointUrl = `${environment.apiUrl}/Projects`;\r\n-\r\n-    constructor(private httpClient: HttpClient) { }\r\n-\r\n-    getProjects(): Observable<Project[]> {\r\n-        const httpOptions = {\r\n             headers: new HttpHeaders({\r\n                 'Content-Type': 'application/json'\r\n             }),\r\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n-        };\r\n-        return this.httpClient.get<Project[]>(this.endpointUrl, httpOptions).pipe(\r\n-            map(data => data)\r\n-        );\r\n-    }\r\n-\r\n-    addProject(name: String): Observable<Project> {\r\n-        const httpOptions = {\r\n-            headers: new HttpHeaders({\r\n-                'Content-Type': 'application/json'\r\n-            }),\r\n-            params: new HttpParams()\r\n-                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n-        };\r\n-        return this.httpClient.post<Project>(this.endpointUrl, name, httpOptions).pipe(\r\n-            map(data => data)\r\n-        );\r\n-    }\r\n-\r\n-    getProjectUsers(projectId: string): Observable<User[]> {\r\n-        const httpOptions = {\r\n-            headers: new HttpHeaders({\r\n-                'Content-Type': 'application/json'\r\n-            }),\r\n-            params: new HttpParams()\r\n-                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('projectId', projectId)\r\n-        };\r\n-        return this.httpClient.get<User[]>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n-            map(data => data)\r\n-        );\r\n-    }\r\n-\r\n-    deleteProject(projectId: string): Observable<any> {\r\n-        const httpOptions = {\r\n-            headers: new HttpHeaders({\r\n-                'Content-Type': 'application/json'\r\n-            }),\r\n-            params: new HttpParams()\r\n-                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n-                .set('projectId', projectId)\r\n-        };\r\n-        return this.httpClient.delete<any>(this.endpointUrl, httpOptions).pipe(\r\n-            map(data => data)\r\n-        );\r\n-    }\r\n-\r\n-    addProjectMember(userId: string, projectId: string): Observable<User> {\r\n-        const httpOptions = {\r\n-            headers: new HttpHeaders({\r\n-                'Content-Type': 'application/json'\r\n-            }),\r\n-            params: new HttpParams()\r\n-                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n-                .set('projectId', projectId)\r\n-                .set('userId', userId)\r\n-        };\r\n-        return this.httpClient.post<User>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n-            map(data => data)\r\n-        );\r\n-    }\r\n-\r\n-    deleteProjectMember(userId: string, projectId: string): Observable<any> {\r\n-        const httpOptions = {\r\n-            headers: new HttpHeaders({\r\n-                'Content-Type': 'application/json'\r\n-            }),\r\n-            params: new HttpParams()\r\n-                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n-                .set('userId', userId)\r\n-                .set('projectId', projectId)\r\n-        };\r\n-        return this.httpClient.delete<any>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n-            map(data => data)\r\n-        );\r\n-    }\r\n-\r\n-\r\n-    renameProjectMember(projectId: string, projectName: string): Observable<any> {\r\n-        const httpOptions = {\r\n-            headers: new HttpHeaders({\r\n-                'Content-Type': 'application/json'\r\n-            }),\r\n-            params: new HttpParams()\r\n-                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n-                .set('projectId', projectId)\r\n                 .set('name', projectName)\r\n         };\r\n         return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n             map(data => console.log(data))\r\n"
                },
                {
                    "date": 1627608678135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,8 +108,8 @@\n                 .set('projectId', projectId)\r\n                 .set('name', projectName)\r\n         };\r\n         return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n-            map(data => console.log(data))\r\n+            map(data => data)\r\n         );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1627951135940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,12 @@\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('projectId', projectId)\r\n                 .set('name', projectName)\r\n         };\r\n-        return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n+        return this.httpClient.patch<any>(this.endpointUrl, {params: new HttpParams()\r\n+            .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+            .set('projectId', projectId)\r\n+            .set('name', projectName)}).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1627951265426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,12 +107,9 @@\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('projectId', projectId)\r\n                 .set('name', projectName)\r\n         };\r\n-        return this.httpClient.patch<any>(this.endpointUrl, {params: new HttpParams()\r\n-            .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n-            .set('projectId', projectId)\r\n-            .set('name', projectName)}).pipe(\r\n+        return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1627951506587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('projectId', projectId)\r\n                 .set('name', projectName)\r\n         };\r\n-        return this.httpClient.patch<any>(this.endpointUrl, httpOptions).pipe(\r\n+        return this.httpClient.patch<any>(this.endpointUrl, null, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1627953352785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('projectId', projectId)\r\n                 .set('userId', userId)\r\n         };\r\n-        return this.httpClient.post<User>(`${this.endpointUrl}/users`, httpOptions).pipe(\r\n+        return this.httpClient.post<User>(`${this.endpointUrl}/users`,null, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n"
                }
            ],
            "date": 1626809968407,
            "name": "Commit-0",
            "content": "import { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../environment';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Error } from '../models/error.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProjectService {\r\n\r\n    endpointUrl = `${environment.apiUrl}/Errors`;\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n    addProject(name: String): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            params: new HttpParams()\r\n                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n        };\r\n        return this.httpClient.post<any>(this.endpointUrl, name, httpOptions).pipe(\r\n            map(data => data)\r\n        );\r\n    }\r\n\r\n    deleteProject(projectId: string): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            params: new HttpParams()\r\n                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                .set('projectId', projectId)\r\n        };\r\n        return this.httpClient.delete<any>(this.endpointUrl, httpOptions).pipe(\r\n            map(data => data)\r\n        );\r\n    }\r\n\r\n    addProjectMember(memberEmail: String): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            params: new HttpParams()\r\n                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n        };\r\n        return this.httpClient.post<any>(this.endpointUrl, memberEmail, httpOptions).pipe(\r\n            map(data => data)\r\n        );\r\n    }\r\n\r\n    deleteProjectMember(memberEmail: string): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            params: new HttpParams()\r\n                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                .set('memberEmail', memberEmail)\r\n        };\r\n        return this.httpClient.delete<any>(this.endpointUrl, httpOptions).pipe(\r\n            map(data => data)\r\n        );\r\n    }\r\n}\r\n"
        }
    ]
}