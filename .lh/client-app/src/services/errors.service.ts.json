{
    "sourceFile": "client-app/src/services/errors.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1626517187472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1626517223824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     endpointUrl = `${environment.apiUrl}/Errors`;\r\n \r\n     constructor(private httpClient: HttpClient) { }\r\n     fetchErrors(): Observable<Error[]> {\r\n-        return this.httpClient.get<any>(this.endpointUrl, this.httpOptions).pipe(\r\n+        return this.httpClient.get<Error[]>(this.endpointUrl, this.httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n"
                },
                {
                    "date": 1626724727903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,19 @@\n import { Observable } from 'rxjs';\r\n import { map } from 'rxjs/operators';\r\n import { Injectable } from '@angular/core';\r\n import { environment } from '../environment';\r\n-import { HttpClient, HttpHeaders } from '@angular/common/http';\r\n+import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n import { Error } from '../models/error.model';\r\n \r\n @Injectable({ providedIn: 'root' })\r\n export class ErrorsService {\r\n     httpOptions = {\r\n         headers: new HttpHeaders({\r\n             'Content-Type': 'application/json'\r\n         }),\r\n+        params: new HttpParams()\r\n+            .set('PageIndex', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n     };\r\n     endpointUrl = `${environment.apiUrl}/Errors`;\r\n \r\n     constructor(private httpClient: HttpClient) { }\r\n@@ -21,9 +23,9 @@\n         );\r\n     }\r\n \r\n     deleteError(errorId: string): Observable<any> {\r\n-        return this.httpClient.patch<any>(this.endpointUrl,errorId, this.httpOptions).pipe(\r\n+        return this.httpClient.patch<any>(this.endpointUrl, errorId, this.httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1626724827741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n         headers: new HttpHeaders({\r\n             'Content-Type': 'application/json'\r\n         }),\r\n         params: new HttpParams()\r\n-            .set('PageIndex', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+            .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n     };\r\n     endpointUrl = `${environment.apiUrl}/Errors`;\r\n \r\n     constructor(private httpClient: HttpClient) { }\r\n"
                },
                {
                    "date": 1626787300458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,26 +6,35 @@\n import { Error } from '../models/error.model';\r\n \r\n @Injectable({ providedIn: 'root' })\r\n export class ErrorsService {\r\n-    httpOptions = {\r\n-        headers: new HttpHeaders({\r\n-            'Content-Type': 'application/json'\r\n-        }),\r\n-        params: new HttpParams()\r\n-            .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n-    };\r\n+   \r\n     endpointUrl = `${environment.apiUrl}/Errors`;\r\n \r\n     constructor(private httpClient: HttpClient) { }\r\n     fetchErrors(): Observable<Error[]> {\r\n-        return this.httpClient.get<Error[]>(this.endpointUrl, this.httpOptions).pipe(\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+        };\r\n+        return this.httpClient.get<Error[]>(this.endpointUrl, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n \r\n     deleteError(errorId: string): Observable<any> {\r\n-        return this.httpClient.patch<any>(this.endpointUrl, errorId, this.httpOptions).pipe(\r\n+        const httpOptions = {\r\n+            headers: new HttpHeaders({\r\n+                'Content-Type': 'application/json'\r\n+            }),\r\n+            params: new HttpParams()\r\n+                .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n+                .set('errorId', errorId)\r\n+        };\r\n+        return this.httpClient.delete<any>(this.endpointUrl).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1626787318297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('errorId', errorId)\r\n         };\r\n-        return this.httpClient.delete<any>(this.endpointUrl).pipe(\r\n+        return this.httpClient.delete<any>(this.endpointUrl,httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1626787462093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import { Error } from '../models/error.model';\r\n \r\n @Injectable({ providedIn: 'root' })\r\n export class ErrorsService {\r\n-   \r\n+\r\n     endpointUrl = `${environment.apiUrl}/Errors`;\r\n \r\n     constructor(private httpClient: HttpClient) { }\r\n     fetchErrors(): Observable<Error[]> {\r\n@@ -32,9 +32,9 @@\n             params: new HttpParams()\r\n                 .set('sessionId', '5d869d68-fbb9-4d07-83f9-9d0a4b487b51')\r\n                 .set('errorId', errorId)\r\n         };\r\n-        return this.httpClient.delete<any>(this.endpointUrl,httpOptions).pipe(\r\n+        return this.httpClient.delete<any>(this.endpointUrl, httpOptions).pipe(\r\n             map(data => data)\r\n         );\r\n     }\r\n }\r\n"
                }
            ],
            "date": 1626517187472,
            "name": "Commit-0",
            "content": "import { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Error } from '../models/error.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ErrorsService {\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/json'\r\n        }),\r\n    };\r\n    endpointUrl = `${environment.apiUrl}/Errors`;\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n    fetchErrors(): Observable<Error[]> {\r\n        return this.httpClient.get<any>(this.endpointUrl, this.httpOptions).pipe(\r\n            map(data => data)\r\n        );\r\n    }\r\n\r\n    deleteError(errorId: string): Observable<any> {\r\n        return this.httpClient.patch<any>(this.endpointUrl,errorId, this.httpOptions).pipe(\r\n            map(data => data)\r\n        );\r\n    }\r\n}\r\n"
        }
    ]
}